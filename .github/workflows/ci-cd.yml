name: CI/CD Pipeline for EasyMeds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Git Status
        run: |
          git status
          git log --oneline -n 5

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t your-dockerhub-username/easymeds:latest .

      - name: Push Docker image to Docker Hub
        run: docker push your-dockerhub-username/easymeds:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull the Docker image
        run: docker pull your-dockerhub-username/easymeds:latest

      - name: Run MySQL Docker Container
        run: |
          docker run --name easymeds-mysql \
                     -e MYSQL_DATABASE=easymeds \
                     -e MYSQL_ROOT_PASSWORD=root \
                     -p 3306:3306 \
                     -d mysql:8.0

      # Add a step to wait for MySQL to initialize
      - name: Wait for MySQL to Initialize
        run: sleep 30

      # Check MySQL logs in case of any errors
      - name: Check MySQL Container Logs
        run: docker logs easymeds-mysql

      - name: Run EasyMeds Docker Container
        run: |
          docker run --name easymeds \
                     --link easymeds-mysql:mysql \
                     -e DATABASE_URL=mysql://root:root@mysql/easymeds \
                     -p 8080:80 \
                     -d your-dockerhub-username/easymeds:latest

      # Verify if MySQL is running and linked correctly
      - name: Verify MySQL Container
        run: docker ps | grep mysql
